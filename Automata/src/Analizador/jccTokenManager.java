/* Generated By:JavaCC: Do not edit this line. jccTokenManager.java */
package Analizador;

/** Token Manager. */
public class jccTokenManager implements jccConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 149;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 5);
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(3);
                  break;
               case 3:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 5:
                  if (curChar == 45)
                     jjCheckNAddStates(6, 8);
                  break;
               case 6:
               case 22:
               case 29:
               case 41:
               case 43:
               case 51:
               case 59:
               case 75:
               case 83:
               case 96:
               case 111:
               case 119:
               case 132:
               case 145:
               case 147:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(7);
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) != 0L && kind > 11)
                     kind = 11;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(9, 13);
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(11);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(14, 16);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(5);
                  break;
               case 15:
                  if (curChar == 45)
                     jjCheckNAdd(16);
                  break;
               case 16:
                  if (curChar == 45)
                     jjCheckNAddStates(17, 19);
                  break;
               case 17:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(17, 18);
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(20, 22);
                  break;
               case 20:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(19, 7);
                  break;
               case 21:
                  if (curChar == 45)
                     jjCheckNAddStates(23, 25);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(19, 21);
                  break;
               case 25:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(25, 26);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 28:
                  if (curChar == 45)
                     jjCheckNAddStates(26, 28);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(29, 33);
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(33);
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(34, 36);
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(28);
                  break;
               case 37:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(40, 42);
                  break;
               case 42:
                  if (curChar == 45)
                     jjCheckNAddStates(37, 39);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(46);
                  break;
               case 46:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(46, 47);
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(40, 42);
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(48, 7);
                  break;
               case 50:
                  if (curChar == 45)
                     jjCheckNAddStates(43, 45);
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(48, 50);
                  break;
               case 54:
                  if (curChar == 45)
                     jjCheckNAdd(55);
                  break;
               case 55:
                  if (curChar == 45)
                     jjCheckNAddStates(46, 48);
                  break;
               case 56:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(56, 57);
                  break;
               case 58:
                  if (curChar == 45)
                     jjCheckNAddStates(49, 51);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(52, 56);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(63);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(57, 59);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(58);
                  break;
               case 67:
                  if (curChar == 45)
                     jjCheckNAddStates(60, 69);
                  break;
               case 68:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(70);
                  break;
               case 70:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(70, 71);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(70, 72);
                  break;
               case 73:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(72, 7);
                  break;
               case 74:
                  if (curChar == 45)
                     jjCheckNAddStates(73, 75);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(72, 74);
                  break;
               case 78:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(78, 79);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(79, 81);
                  break;
               case 82:
                  if (curChar == 45)
                     jjCheckNAddStates(76, 78);
                  break;
               case 85:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(79, 83);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(87);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(84, 86);
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(82);
                  break;
               case 91:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(91, 92);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(93);
                  break;
               case 93:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(93, 94);
                  break;
               case 95:
                  if (curChar == 45)
                     jjCheckNAddStates(87, 89);
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(90, 94);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(100);
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(95, 97);
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(95);
                  break;
               case 104:
                  if (curChar == 45)
                     jjCheckNAddStates(98, 100);
                  break;
               case 105:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(105, 106);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(101, 103);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(108, 7);
                  break;
               case 110:
                  if (curChar == 45)
                     jjCheckNAddStates(104, 106);
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(108, 110);
                  break;
               case 114:
                  if (curChar == 45)
                     jjCheckNAddStates(107, 109);
                  break;
               case 115:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 118:
                  if (curChar == 45)
                     jjCheckNAddStates(110, 112);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(113, 117);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(123);
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(118, 120);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(118);
                  break;
               case 127:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(128, 127);
                  break;
               case 128:
                  if (curChar == 45)
                     jjCheckNAddStates(121, 123);
                  break;
               case 129:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(129, 130);
                  break;
               case 131:
                  if (curChar == 45)
                     jjCheckNAddStates(124, 126);
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(127, 131);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(136);
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(132, 134);
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(131);
                  break;
               case 140:
                  if (curChar == 45)
                     jjCheckNAddStates(135, 137);
                  break;
               case 141:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(141, 142);
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(144, 146);
                  break;
               case 146:
                  if (curChar == 45)
                     jjCheckNAddStates(138, 140);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x87fffffeL & l) != 0L)
                     jjAddStates(141, 142);
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(143, 144);
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(145, 147);
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(6, 8);
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(8);
                  break;
               case 11:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(11, 12);
                  break;
               case 14:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(148, 152);
                  break;
               case 15:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(16);
                  break;
               case 16:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(17, 19);
                  break;
               case 17:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(17, 18);
                  break;
               case 19:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjAddStates(153, 154);
                  break;
               case 21:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(23, 25);
                  break;
               case 23:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(23);
                  break;
               case 25:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(155, 156);
                  break;
               case 27:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(157, 159);
                  break;
               case 28:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(26, 28);
                  break;
               case 30:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(30);
                  break;
               case 33:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 36:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(160, 164);
                  break;
               case 37:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(165, 166);
                  break;
               case 40:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjAddStates(167, 168);
                  break;
               case 42:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(37, 39);
                  break;
               case 44:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(44);
                  break;
               case 46:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(169, 170);
                  break;
               case 48:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjAddStates(171, 172);
                  break;
               case 50:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(43, 45);
                  break;
               case 52:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(52);
                  break;
               case 54:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAdd(55);
                  break;
               case 55:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(46, 48);
                  break;
               case 56:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(56, 57);
                  break;
               case 57:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(173, 175);
                  break;
               case 58:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(49, 51);
                  break;
               case 60:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(60);
                  break;
               case 63:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(63, 64);
                  break;
               case 66:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(176, 180);
                  break;
               case 67:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(60, 69);
                  break;
               case 68:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 70:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(181, 182);
                  break;
               case 72:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjAddStates(183, 184);
                  break;
               case 74:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(73, 75);
                  break;
               case 76:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(76);
                  break;
               case 78:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(78, 79);
                  break;
               case 81:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(185, 187);
                  break;
               case 82:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(76, 78);
                  break;
               case 84:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(84);
                  break;
               case 87:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(87, 88);
                  break;
               case 90:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(188, 192);
                  break;
               case 91:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(91, 92);
                  break;
               case 93:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(193, 194);
                  break;
               case 94:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(195, 197);
                  break;
               case 95:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(87, 89);
                  break;
               case 97:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(97);
                  break;
               case 100:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 103:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(198, 202);
                  break;
               case 104:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(98, 100);
                  break;
               case 105:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(105, 106);
                  break;
               case 106:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(106, 107);
                  break;
               case 108:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjAddStates(203, 204);
                  break;
               case 110:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(104, 106);
                  break;
               case 112:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(112);
                  break;
               case 114:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(107, 109);
                  break;
               case 115:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 117:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(205, 207);
                  break;
               case 118:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(110, 112);
                  break;
               case 120:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(120);
                  break;
               case 123:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(123, 124);
                  break;
               case 126:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(208, 212);
                  break;
               case 127:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(128, 127);
                  break;
               case 128:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(121, 123);
                  break;
               case 129:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(129, 130);
                  break;
               case 130:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(213, 215);
                  break;
               case 131:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(124, 126);
                  break;
               case 133:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(133);
                  break;
               case 136:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(136, 137);
                  break;
               case 139:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddStates(216, 220);
                  break;
               case 140:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(135, 137);
                  break;
               case 141:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(141, 142);
                  break;
               case 144:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjAddStates(221, 222);
                  break;
               case 146:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 148:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(148);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 149 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   2, 15, 25, 37, 45, 54, 5, 6, 8, 10, 11, 13, 5, 7, 10, 11, 
   7, 17, 18, 16, 19, 21, 24, 21, 22, 23, 28, 29, 30, 32, 33, 35, 
   28, 7, 32, 33, 7, 42, 43, 44, 48, 50, 53, 50, 51, 52, 56, 57, 
   55, 58, 59, 60, 62, 63, 65, 58, 7, 62, 63, 7, 68, 69, 78, 79, 
   91, 92, 104, 114, 127, 140, 72, 74, 77, 74, 75, 76, 82, 83, 84, 86, 
   87, 89, 82, 7, 86, 87, 7, 95, 96, 97, 99, 100, 102, 95, 7, 99, 
   100, 7, 105, 106, 104, 108, 110, 113, 110, 111, 112, 115, 116, 114, 118, 119, 
   120, 122, 123, 125, 118, 7, 122, 123, 7, 129, 130, 128, 131, 132, 133, 135, 
   136, 138, 131, 7, 135, 136, 7, 141, 142, 140, 146, 147, 148, 1, 67, 3, 
   4, 5, 9, 14, 11, 5, 12, 9, 14, 19, 20, 25, 26, 28, 31, 36, 
   33, 28, 34, 31, 36, 37, 38, 40, 41, 46, 47, 48, 49, 58, 61, 66, 
   63, 58, 64, 61, 66, 70, 71, 72, 73, 82, 85, 90, 87, 82, 88, 85, 
   90, 93, 94, 95, 98, 103, 100, 95, 101, 98, 103, 108, 109, 118, 121, 126, 
   123, 118, 124, 121, 126, 131, 134, 139, 136, 131, 137, 134, 139, 144, 145, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0x801L, 
};
static final long[] jjtoSkip = {
   0x1eL, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[149];
private final int[] jjstateSet = new int[298];
protected char curChar;
/** Constructor. */
public jccTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public jccTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 149; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
